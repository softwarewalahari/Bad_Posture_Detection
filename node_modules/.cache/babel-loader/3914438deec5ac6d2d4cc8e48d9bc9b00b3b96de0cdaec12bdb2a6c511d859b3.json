{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haripriya\\\\Desktop\\\\Bad_posture_detection\\\\posture-app\\\\src\\\\components\\\\UploadVideo.js\",\n  _s = $RefreshSig$();\n// UploadVideo.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadVideo = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState(null);\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const response = await fetch(\"http://localhost:54301/analyze\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(\"Analysis Result:\", result);\n      setResult(result);\n    } catch (error) {\n      console.error(\"Upload Error:\", error.message);\n      alert(\"Upload failed: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload a Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      onChange: e => setSelectedFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(result, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadVideo, \"qahOzM0gFRbkkN/rj/rvfqwEHXM=\");\n_c = UploadVideo;\nexport default UploadVideo; // ✅ This line is very important\nvar _c;\n$RefreshReg$(_c, \"UploadVideo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadVideo","_s","selectedFile","setSelectedFile","result","setResult","handleUpload","formData","FormData","append","response","fetch","method","body","ok","Error","status","json","console","log","error","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/haripriya/Desktop/Bad_posture_detection/posture-app/src/components/UploadVideo.js"],"sourcesContent":["// UploadVideo.js\r\nimport React, { useState } from 'react';\r\n\r\nconst UploadVideo = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:54301/analyze\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Server responded with ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(\"Analysis Result:\", result);\r\n      setResult(result);\r\n    } catch (error) {\r\n      console.error(\"Upload Error:\", error.message);\r\n      alert(\"Upload failed: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload a Video</h2>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"video/*\"\r\n        onChange={(e) => setSelectedFile(e.target.files[0])}\r\n      />\r\n      <button onClick={handleUpload}>Upload</button>\r\n      {result && <pre>{JSON.stringify(result, null, 2)}</pre>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadVideo; // ✅ This line is very important\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,YAAY,CAAC;IAErC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyBL,QAAQ,CAACM,MAAM,EAAE,CAAC;MAC7D;MAEA,MAAMZ,MAAM,GAAG,MAAMM,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEf,MAAM,CAAC;MACvCC,SAAS,CAACD,MAAM,CAAC;IACnB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC7CC,KAAK,CAAC,iBAAiB,GAAGF,KAAK,CAACC,OAAO,CAAC;IAC1C;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAGC,CAAC,IAAK5B,eAAe,CAAC4B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACF5B,OAAA;MAAQmC,OAAO,EAAE5B,YAAa;MAAAiB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CvB,MAAM,iBAAIL,OAAA;MAAAwB,QAAA,EAAMY,IAAI,CAACC,SAAS,CAAChC,MAAM,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvCID,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAyCjB,eAAeA,WAAW,CAAC,CAAC;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}