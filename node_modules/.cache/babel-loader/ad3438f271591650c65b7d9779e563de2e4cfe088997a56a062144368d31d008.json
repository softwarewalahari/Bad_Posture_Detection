{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haripriya\\\\Desktop\\\\Bad_posture_detection\\\\posture-app\\\\src\\\\components\\\\WebcamCapture.js\",\n  _s = $RefreshSig$();\n// WebcamCapture.js\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WebcamCapture() {\n  _s();\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [recording, setRecording] = useState(false);\n  const [videoURL, setVideoURL] = useState(null);\n  const [recordedBlob, setRecordedBlob] = useState(null);\n  const [stream, setStream] = useState(null);\n  const startWebcam = async () => {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      videoRef.current.srcObject = mediaStream;\n      setStream(mediaStream);\n    } catch (err) {\n      alert(\"Could not access webcam: \" + err.message);\n    }\n  };\n  const stopWebcam = () => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n      setStream(null);\n    }\n  };\n  const startRecording = () => {\n    const options = {\n      mimeType: 'video/webm'\n    };\n    const recordedChunks = [];\n    const mediaRecorder = new MediaRecorder(stream, options);\n    mediaRecorder.ondataavailable = function (e) {\n      if (e.data.size > 0) {\n        recordedChunks.push(e.data);\n      }\n    };\n    mediaRecorder.onstop = () => {\n      const blob = new Blob(recordedChunks, {\n        type: 'video/webm'\n      });\n      const url = URL.createObjectURL(blob);\n      setVideoURL(url);\n      setRecordedBlob(blob);\n    };\n    mediaRecorder.start();\n    mediaRecorderRef.current = mediaRecorder;\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n  };\n  const sendToBackend = async () => {\n    if (!recordedBlob) return;\n    const formData = new FormData();\n    formData.append('file', videoBlob, 'webcam-video.webm');\n    try {\n      const response = await fetch('http://localhost:54301/analyze', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('Analysis result:', result);\n      alert('Video uploaded successfully!');\n    } catch (err) {\n      console.error('Error uploading video:', err);\n      alert('Failed to upload video');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Webcam Video Recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      width: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), !stream && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startWebcam,\n      children: \"Start Webcam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }, this), stream && !recording && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 32\n    }, this), recording && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }, this), stream && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopWebcam,\n      children: \"Stop Webcam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }, this), videoURL && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recorded Video Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoURL,\n        controls: true,\n        width: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendToBackend,\n        children: \"Upload & Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(WebcamCapture, \"UoNZdK/gUbTGSwYGpnR6KEQ496Q=\");\n_c = WebcamCapture;\nexport default WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","WebcamCapture","_s","videoRef","mediaRecorderRef","recording","setRecording","videoURL","setVideoURL","recordedBlob","setRecordedBlob","stream","setStream","startWebcam","mediaStream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","err","alert","message","stopWebcam","getTracks","forEach","track","stop","startRecording","options","mimeType","recordedChunks","mediaRecorder","MediaRecorder","ondataavailable","e","data","size","push","onstop","blob","Blob","type","url","URL","createObjectURL","start","stopRecording","sendToBackend","formData","FormData","append","videoBlob","response","fetch","method","body","ok","Error","status","result","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","width","onClick","src","controls","_c","$RefreshReg$"],"sources":["C:/Users/haripriya/Desktop/Bad_posture_detection/posture-app/src/components/WebcamCapture.js"],"sourcesContent":["// WebcamCapture.js\r\nimport React, { useRef, useState } from 'react';\r\n\r\nfunction WebcamCapture() {\r\n  const videoRef = useRef(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const [recording, setRecording] = useState(false);\r\n  const [videoURL, setVideoURL] = useState(null);\r\n  const [recordedBlob, setRecordedBlob] = useState(null);\r\n  const [stream, setStream] = useState(null);\r\n\r\n  const startWebcam = async () => {\r\n    try {\r\n      const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      videoRef.current.srcObject = mediaStream;\r\n      setStream(mediaStream);\r\n    } catch (err) {\r\n      alert(\"Could not access webcam: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const stopWebcam = () => {\r\n    if (stream) {\r\n      stream.getTracks().forEach(track => track.stop());\r\n      videoRef.current.srcObject = null;\r\n      setStream(null);\r\n    }\r\n  };\r\n\r\n  const startRecording = () => {\r\n    const options = { mimeType: 'video/webm' };\r\n    const recordedChunks = [];\r\n    const mediaRecorder = new MediaRecorder(stream, options);\r\n\r\n    mediaRecorder.ondataavailable = function (e) {\r\n      if (e.data.size > 0) {\r\n        recordedChunks.push(e.data);\r\n      }\r\n    };\r\n\r\n    mediaRecorder.onstop = () => {\r\n      const blob = new Blob(recordedChunks, { type: 'video/webm' });\r\n      const url = URL.createObjectURL(blob);\r\n      setVideoURL(url);\r\n      setRecordedBlob(blob);\r\n    };\r\n\r\n    mediaRecorder.start();\r\n    mediaRecorderRef.current = mediaRecorder;\r\n    setRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorderRef.current.stop();\r\n    setRecording(false);\r\n  };\r\n\r\n  const sendToBackend = async () => {\r\n    if (!recordedBlob) return;\r\n\r\n    const formData = new FormData();\r\n  formData.append('file', videoBlob, 'webcam-video.webm');\r\n\r\n\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:54301/analyze', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Server responded with ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('Analysis result:', result);\r\n      alert('Video uploaded successfully!');\r\n    } catch (err) {\r\n      console.error('Error uploading video:', err);\r\n      alert('Failed to upload video');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Webcam Video Recorder</h2>\r\n      <video ref={videoRef} autoPlay playsInline width={400} />\r\n      <br />\r\n      {!stream && <button onClick={startWebcam}>Start Webcam</button>}\r\n      {stream && !recording && <button onClick={startRecording}>Start Recording</button>}\r\n      {recording && <button onClick={stopRecording}>Stop Recording</button>}\r\n      {stream && <button onClick={stopWebcam}>Stop Webcam</button>}\r\n\r\n      {videoURL && (\r\n        <>\r\n          <h3>Recorded Video Preview:</h3>\r\n          <video src={videoURL} controls width={300} />\r\n          <br />\r\n          <button onClick={sendToBackend}>Upload & Analyze</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WebcamCapture;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}